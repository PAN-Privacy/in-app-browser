import { __extends } from "tslib";
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var AllInOneSDK = /** @class */ (function (_super) {
    __extends(AllInOneSDK, _super);
    function AllInOneSDK() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AllInOneSDK.prototype.startTransaction = function (options) { return cordova(this, "startTransaction", {}, arguments); };
    AllInOneSDK.pluginName = "AllInOneSDK";
    AllInOneSDK.plugin = "cordova-paytm-allinonesdk";
    AllInOneSDK.pluginRef = "AllInOneSDK";
    AllInOneSDK.repo = "https://github.com/paytm/paytm-allinonesdk-ionic-cordova.git";
    AllInOneSDK.platforms = ["Android", "iOS"];
    return AllInOneSDK;
}(IonicNativePlugin));
export { AllInOneSDK };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2FsbC1pbi1vbmUtc2RrL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsT0FBTyw4QkFPTixNQUFNLG9CQUFvQixDQUFDOztJQTBDSywrQkFBaUI7Ozs7SUFTaEQsc0NBQWdCLGFBQUMsT0FBMkI7Ozs7OztzQkEzRDlDO0VBa0RpQyxpQkFBaUI7U0FBckMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIFBsdWdpbixcbiAgQ29yZG92YSxcbiAgQ29yZG92YVByb3BlcnR5LFxuICBDb3Jkb3ZhSW5zdGFuY2UsXG4gIEluc3RhbmNlUHJvcGVydHksXG4gIElvbmljTmF0aXZlUGx1Z2luLFxufSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG4vKipcbiAqIEBuYW1lIEFsbEluT25lU0RLXG4gKiBAZGVzY3JpcHRpb25cbiAqIFBheXRtIEFsbC1pbi1PbmUgU0RLIHBsdWdpbiBmb3IgQ29yZG92YS9Jb25pYyBBcHBsaWNhdGlvbnNcbiAqIFBheXRtIEFsbC1pbi1PbmUgU0RLIHByb3ZpZGVzIGEgc3dpZnQsIHNlY3VyZSBhbmQgc2VhbWxlc3MgcGF5bWVudCBleHBlcmllbmNlIHRvIHlvdXIgdXNlcnMgYnkgaW52b2tpbmcgdGhlIFBheXRtIGFwcCAoaWYgaW5zdGFsbGVkIG9uIHlvdXIgdXNlcuKAmXMgc21hcnRwaG9uZSkgdG8gY29tcGxldGUgcGF5bWVudCBmb3IgeW91ciBvcmRlci5cbiAqIFBheXRtIEFsbC1pbi1PbmUgU0RLIGVuYWJsZXMgcGF5bWVudCBhY2NlcHRhbmNlIHZpYSBQYXl0bSB3YWxsZXQsIFBheXRtIFBheW1lbnRzIEJhbmssIHNhdmVkIERlYml0L0NyZWRpdCBjYXJkcywgTmV0IEJhbmtpbmcsIEJISU0gVVBJIGFuZCBFTUkgYXMgYXZhaWxhYmxlIGluIHlvdXIgY3VzdG9tZXLigJlzIFBheXRtIGFjY291bnQuIElmIFBheXRtIGFwcCBpcyBub3QgaW5zdGFsbGVkIG9uIGEgY3VzdG9tZXIncyBkZXZpY2UsIHRoZSB0cmFuc2FjdGlvbiB3aWxsIGJlIHByb2Nlc3NlZCB2aWEgd2ViIHZpZXcgd2l0aGluIHRoZSBBbGwtaW4tT25lIFNESy5cbiAqIEZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IFBheXRtIEFsbC1pbi1PbmUgU0RLLCBwbGVhc2UgdmlzaXQgaHR0cHM6Ly9kZXZlbG9wZXIucGF5dG0uY29tL2RvY3MvYWxsLWluLW9uZS1zZGsvaHlicmlkLWFwcHMvY29yZG92YS9cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEFsbEluT25lU0RLIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9hbGwtaW4tb25lLXNkay9uZ3gnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGFsbEluT25lU0RLOiBBbGxJbk9uZVNESykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogRm9yIGJlbG93IHBhcmFtZXRlcnMgc2VlIFtkb2N1bWVudGF0aW9uXShodHRwczovL2RldmVsb3Blci5wYXl0bS5jb20vZG9jcy9hbGwtaW4tb25lLXNkay9oeWJyaWQtYXBwcy9jb3Jkb3ZhLylcbiAqIGxldCBwYXltZW50SW50ZW50ID0geyBtaWQgOiBtZXJjaGFudElELCBvcmRlcklkOiBvcmRlcklkLCB0eG5Ub2tlbjogdHJhbnNhY3Rpb25Ub2tlbiwgYW1vdW50OiBhbW91bnQsIGlzU3RhZ2luZzogaXNTdGFnaW5nLCBjYWxsYmFja1VybDpjYWxsQmFja1VSTCwgIHJlc3RyaWN0QXBwSW52b2tlOnJlc3RyaWN0QXBwSW52b2tlICB9XG4gKlxuICogdGhpcy5hbGxJbk9uZVNESy5zdGFydFRyYW5zYWN0aW9uKHBheW1lbnRJbnRlbnQpXG4gKiAgIC50aGVuKChyZXM6IGFueSkgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKlxuICogRm9yIGlPUzpcbiAqIEFmdGVyIGFkZGluZyB0aGUgcGx1Z2luLCBvcGVuIHRoZSBpT1MgcHJvamVjdCwgeW91IGNhbiBmaW5kIHRoZSBzYW1lIGF0IDxwcm9qZWN0TmFtZT4vcGxhdGZvcm1zL2lvcy5cbiAqIEluIGNhc2UgbWVyY2hhbnQgZG9u4oCZdCBoYXZlIGNhbGxiYWNrIFVSTCwgQWRkIGFuIGVudHJ5IGludG8gSW5mby5wbGlzdCBMU0FwcGxpY2F0aW9uUXVlcmllc1NjaGVtZXMoQXJyYXkpIEl0ZW0gMCAoU3RyaW5nKS0+IHBheXRtXG4gKiBBZGQgYSBVUkwgU2NoZW1lIOKAnHBheXRt4oCdK+KAnU1JROKAnVxuICpcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdBbGxJbk9uZVNESycsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGF5dG0tYWxsaW5vbmVzZGsnLFxuICBwbHVnaW5SZWY6ICdBbGxJbk9uZVNESycsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vcGF5dG0vcGF5dG0tYWxsaW5vbmVzZGstaW9uaWMtY29yZG92YS5naXQnLFxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnXSxcbn0pXG5leHBvcnQgY2xhc3MgQWxsSW5PbmVTREsgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBUaGlzIGZ1bmN0aW9uIGNoZWNrcyBpZiBQYXl0bSBBcHBsaWNhdGlvbiBpcyBhdmFpbGFibGUgb24gdGhlIGRldmljZS5cbiAgICogSWYgUGF5dG0gZXhpc3RzIHRoZW4gaXQgaW52b2tlcyBQYXl0bSBBcHBsaWNhdGlvbiB3aXRoIHRoZSBwYXJhbWV0ZXJzIHNlbnQgYW5kIGNyZWF0ZXMgYW4gb3JkZXIuXG4gICAqIElmIHRoZSBQYXl0bSBBcHBsaWNhdGlvbiBpcyBub3QgYXZhaWxhYmxlIHRoZSB0cmFuc2FjdGlvbiBpcyBjb250aW51ZWQgb24gYSB3ZWJWaWV3IHdpdGhpbiBBbGwtaW4tT25lIFNESy5cbiAgICogQHBhcmFtIG9wdGlvbnMge1BheW1lbnRJbnRlbnRNb2RlbH0gVGhlc2UgcGFyYW1ldGVycyBhcmUgcmVxdWlyZWQgYW5kIHdpbGwgYmUgdXNlZCB0byBjcmVhdGUgYW4gb3JkZXIuXG4gICAqIEByZXR1cm4ge1Byb21pc2U8UGF5dG1SZXNwb25zZT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBhIHRyYW5zYWN0aW9uIGNvbXBsZXRlcyhib3RoIGZhaWxlZCBhbmQgc3VjY2Vzc2Z1bCkuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN0YXJ0VHJhbnNhY3Rpb24ob3B0aW9uczogUGF5bWVudEludGVudE1vZGVsKTogUHJvbWlzZTxQYXl0bVJlc3BvbnNlPiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG5cbi8qKlxuICogVGhlIHJlc3BvbnNlIHRoYXQgd2lsbCBiZSByZWNpZXZlZCB3aGVuIGFueSB0cmFuc2FjdGlvbiBpcyBjb21wbGV0ZWRcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQYXl0bVJlc3BvbnNlIHtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICByZXNwb25zZTogc3RyaW5nOyAvLyBBIHN0cmluZ2lmaWVkIHJlc3BvbnNlIG9mIGEgaGFzaG1hcCByZXR1cm5lZCBmcm9tIEFsbC1pbi1PbmUgU0RLXG59XG5cbi8qKlxuICogRm9yIGJlbG93IHBhcmFtZXRlcnMgc2VlIFtkb2N1bWVudGF0aW9uXShodHRwczovL2RldmVsb3Blci5wYXl0bS5jb20vZG9jcy9hbGwtaW4tb25lLXNkay9oeWJyaWQtYXBwcy9jb3Jkb3ZhLylcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBQYXltZW50SW50ZW50TW9kZWwge1xuICBtaWQ6IHN0cmluZzsgLy8gTWVyY2hhbnQgSURcbiAgb3JkZXJJZDogc3RyaW5nOyAvLyBPcmRlciBJRFxuICB0eG5Ub2tlbjogc3RyaW5nOyAvLyBUcmFuc2FjdGlvbiBUb2tlblxuICBhbW91bnQ6IHN0cmluZzsgLy8gQW1vdW50XG4gIGlzU3RhZ2luZzogYm9vbGVhbjsgLy8gRW52aXJvbm1lbnRcbiAgY2FsbGJhY2tVcmw6IHN0cmluZzsgLy8gQ2FsbGJhY2sgVVJMXG4gIHJlc3RyaWN0QXBwSW52b2tlOiBib29sZWFuOyAvLyBUbyBlbmFibGUgb3IgZGlzYWJsZSB0aGUgcGF5dG0gYXBwIGludm9jYXRpb25cbn1cbiJdfQ==