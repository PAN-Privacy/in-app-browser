import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var AppCenterCrashes = /** @class */ (function (_super) {
    __extends(AppCenterCrashes, _super);
    function AppCenterCrashes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppCenterCrashes.prototype.generateTestCrash = function () { return cordova(this, "generateTestCrash", {}, arguments); };
    AppCenterCrashes.prototype.hasCrashedInLastSession = function () { return cordova(this, "hasCrashedInLastSession", {}, arguments); };
    AppCenterCrashes.prototype.lastSessionCrashReport = function () { return cordova(this, "lastSessionCrashReport", {}, arguments); };
    AppCenterCrashes.prototype.isEnabled = function () { return cordova(this, "isEnabled", {}, arguments); };
    AppCenterCrashes.prototype.setEnabled = function (shouldEnable) { return cordova(this, "setEnabled", {}, arguments); };
    AppCenterCrashes.pluginName = "AppCenterCrashes";
    AppCenterCrashes.plugin = "cordova-plugin-appcenter-crashes";
    AppCenterCrashes.pluginRef = "AppCenter.Crashes";
    AppCenterCrashes.repo = "https://github.com/Microsoft/appcenter-sdk-cordova/tree/master/cordova-plugin-appcenter-crashes";
    AppCenterCrashes.platforms = ["Android", "iOS"];
    AppCenterCrashes.decorators = [
        { type: Injectable }
    ];
    return AppCenterCrashes;
}(IonicNativePlugin));
export { AppCenterCrashes };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2FwcC1jZW50ZXItY3Jhc2hlcy9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUFtRWxDLG9DQUFpQjs7OztJQU9yRCw0Q0FBaUI7SUFPakIsa0RBQXVCO0lBU3ZCLGlEQUFzQjtJQVN0QixvQ0FBUztJQVVULHFDQUFVLGFBQUMsWUFBcUI7Ozs7Ozs7Z0JBM0NqQyxVQUFVOzsyQkFuRVg7RUFvRXNDLGlCQUFpQjtTQUExQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBBcHBDZW50ZXJDcmFzaFJlcG9ydCB7XG4gIGlkOiBzdHJpbmc7XG4gIGRldmljZTogQXBwQ2VudGVyQ3Jhc2hSZXBvcnREZXZpY2U7XG4gIGFwcFN0YXJ0VGltZTogbnVtYmVyO1xuICBhcHBFcnJvclRpbWU6IG51bWJlcjtcbiAgc2lnbmFsOiBzdHJpbmc7XG4gIGFwcFByb2Nlc3NJZGVudGlmaWVyOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBwQ2VudGVyQ3Jhc2hSZXBvcnREZXZpY2Uge1xuICBvZW1fbmFtZTogc3RyaW5nO1xuICBvc19uYW1lOiBzdHJpbmc7XG4gIGFwcF92ZXJzaW9uOiBzdHJpbmc7XG4gIHRpbWVfem9uZV9vZmZzZXQ6IG51bWJlcjtcbiAgY2Fycmllcl9uYW1lOiBzdHJpbmc7XG4gIHNjcmVlbl9zaXplOiBzdHJpbmc7XG4gIGxvY2FsZTogc3RyaW5nO1xuICBzZGtfdmVyc2lvbjogc3RyaW5nO1xuICBjYXJyaWVyX2NvdW50cnk6IHN0cmluZztcbiAgb3NfYnVpbGQ6IHN0cmluZztcbiAgYXBwX25hbWVzcGFjZTogc3RyaW5nO1xuICBvc192ZXJzaW9uOiBzdHJpbmc7XG4gIHNka19uYW1lOiBzdHJpbmc7XG4gIG1vZGVsOiBzdHJpbmc7XG4gIGFwcF9idWlsZDogc3RyaW5nO1xufVxuXG4vKipcbiAqIEBuYW1lIEFwcCBDZW50ZXIgQ3Jhc2hlc1xuICogQGRlc2NyaXB0aW9uXG4gKiBBcHAgQ2VudGVyIEFuYWx5dGljcyBoZWxwcyB5b3UgdW5kZXJzdGFuZCB1c2VyIGJlaGF2aW9yIGFuZCBjdXN0b21lciBlbmdhZ2VtZW50IHRvIGltcHJvdmUgeW91ciBhcHAuXG4gKiBUaGUgU0RLIGF1dG9tYXRpY2FsbHkgY2FwdHVyZXMgc2Vzc2lvbiBjb3VudCBhbmQgZGV2aWNlIHByb3BlcnRpZXMgbGlrZSBtb2RlbCwgT1MgdmVyc2lvbiwgZXRjLlxuICogWW91IGNhbiBkZWZpbmUgeW91ciBvd24gY3VzdG9tIGV2ZW50cyB0byBtZWFzdXJlIHRoaW5ncyB0aGF0IG1hdHRlciB0byB5b3UuXG4gKiBBbGwgdGhlIGluZm9ybWF0aW9uIGNhcHR1cmVkIGlzIGF2YWlsYWJsZSBpbiB0aGUgQXBwIENlbnRlciBwb3J0YWwgZm9yIHlvdSB0byBhbmFseXplIHRoZSBkYXRhLlxuICpcbiAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvYXBwY2VudGVyL3Nkay9jcmFzaGVzL2NvcmRvdmFcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEFwcENlbnRlckNyYXNoZXMgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2FwcC1jZW50ZXItY3Jhc2hlcy9uZ3gnO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIEFwcENlbnRlckNyYXNoZXM6IEFwcENlbnRlckNyYXNoZXMpIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMuQXBwQ2VudGVyQ3Jhc2hlcy5zZXRFbmFibGVkKHRydWUpLnRoZW4oKCkgPT4ge1xuICogICAgdGhpcy5BcHBDZW50ZXJDcmFzaGVzLmxhc3RTZXNzaW9uQ3Jhc2hSZXBvcnQoKS50aGVuKHJlcG9ydCA9PiB7XG4gKiAgICAgICAgY29uc29sZS5sb2coJ0NyYXNoIHJlcG9ydCcsIHJlcG9ydCk7XG4gKiAgICB9KTtcbiAqIH0pO1xuICpcbiAqIGBgYFxuICogQGludGVyZmFjZXNcbiAqIEFwcENlbnRlckNyYXNoUmVwb3J0XG4gKiBBcHBDZW50ZXJDcmFzaFJlcG9ydERldmljZVxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0FwcENlbnRlckNyYXNoZXMnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1hcHBjZW50ZXItY3Jhc2hlcycsXG4gIHBsdWdpblJlZjogJ0FwcENlbnRlci5DcmFzaGVzJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9NaWNyb3NvZnQvYXBwY2VudGVyLXNkay1jb3Jkb3ZhL3RyZWUvbWFzdGVyL2NvcmRvdmEtcGx1Z2luLWFwcGNlbnRlci1jcmFzaGVzJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFwcENlbnRlckNyYXNoZXMgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBBcHAgQ2VudGVyIENyYXNoZXMgcHJvdmlkZXMgeW91IHdpdGggYW4gQVBJIHRvIGdlbmVyYXRlIGEgdGVzdCBjcmFzaCBmb3IgZWFzeSB0ZXN0aW5nIG9mIHRoZSBTREsuXG4gICAqIFRoaXMgQVBJIGNhbiBvbmx5IGJlIHVzZWQgaW4gdGVzdC9iZXRhIGFwcHMgYW5kIHdvbid0IGRvIGFueXRoaW5nIGluIHByb2R1Y3Rpb24gYXBwcy5cbiAgICogQHJldHVybnMgdm9pZFxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZW5lcmF0ZVRlc3RDcmFzaCgpOiB2b2lkIHt9XG5cbiAgLyoqXG4gICAqIEF0IGFueSB0aW1lIGFmdGVyIHN0YXJ0aW5nIHRoZSBTREssIHlvdSBjYW4gY2hlY2sgaWYgdGhlIGFwcCBjcmFzaGVkIGluIHRoZSBwcmV2aW91cyBsYXVuY2hcbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGhhc0NyYXNoZWRJbkxhc3RTZXNzaW9uKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZXRhaWxzIGFib3V0IHRoZSBsYXN0IGNyYXNoXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPEFwcENlbnRlckNyYXNoUmVwb3J0Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgbGFzdFNlc3Npb25DcmFzaFJlcG9ydCgpOiBQcm9taXNlPEFwcENlbnRlckNyYXNoUmVwb3J0PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIEFwcCBDZW50ZXIgQ3Jhc2hlcyBpcyBlbmFibGVkXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGJvb2xlYW4+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc0VuYWJsZWQoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEVuYWJsZSBvciBkaXNhYmxlIEFwcCBDZW50ZXIgQ3Jhc2hlcyBhdCBydW50aW1lXG4gICAqIEBwYXJhbSAge2Jvb2xlYW59IHNob3VsZEVuYWJsZSBTZXQgdmFsdWVcbiAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldEVuYWJsZWQoc2hvdWxkRW5hYmxlOiBib29sZWFuKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=