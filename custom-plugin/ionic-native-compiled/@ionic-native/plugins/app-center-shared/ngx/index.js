import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var AppCenter = /** @class */ (function (_super) {
    __extends(AppCenter, _super);
    function AppCenter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppCenter.prototype.getInstallId = function () { return cordova(this, "getInstallId", {}, arguments); };
    AppCenter.prototype.setUserId = function (userId) { return cordova(this, "setUserId", {}, arguments); };
    AppCenter.pluginName = "AppCenter";
    AppCenter.plugin = "cordova-plugin-appcenter-shared";
    AppCenter.pluginRef = "AppCenter";
    AppCenter.repo = "https://github.com/Microsoft/appcenter-sdk-cordova/tree/master/cordova-plugin-appcenter-shared";
    AppCenter.platforms = ["Android", "iOS"];
    AppCenter.decorators = [
        { type: Injectable }
    ];
    return AppCenter;
}(IonicNativePlugin));
export { AppCenter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2FwcC1jZW50ZXItc2hhcmVkL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQXVDekMsNkJBQWlCOzs7O0lBTzlDLGdDQUFZO0lBV1osNkJBQVMsYUFBQyxNQUFjOzs7Ozs7O2dCQW5CekIsVUFBVTs7b0JBdkNYO0VBd0MrQixpQkFBaUI7U0FBbkMsU0FBUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIEFwcCBDZW50ZXIgU2hhcmVkXG4gKiBAY2FwYWNpdG9yaW5jb21wYXRpYmxlIHRydWVcbiAqIEBkZXNjcmlwdGlvblxuICogRXhwb3NlcyBhZGRpdGlvbmFsIHNoYXJlZCBBUElzIGZvciBBcHAgQ2VudGVyLlxuICpcbiAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvYXBwY2VudGVyL3Nkay9vdGhlci1hcGlzL2NvcmRvdmFcbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEFwcENlbnRlciB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvYXBwLWNlbnRlci1zaGFyZWQvbmd4JztcbiAqXG4gKiAuLi5cbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwcENlbnRlclNoYXJlZDogQXBwQ2VudGVyKSB7IH1cbiAqXG4gKiBhc3luYyBnZXRJbnN0YWxsSWQoKSB7XG4gKiAgIGNvbnN0IGlkID0gYXdhaXQgdGhpcy5hcHBDZW50ZXIuZ2V0SW5zdGFsbElkKCk7XG4gKiB9XG4gKlxuICogYXN5bmMgc2V0VXNlcklkKCkge1xuICogICB0cnl7XG4gKiAgICAgYXdhaXQgdGhpcy5hcHBDZW50ZXIuc2V0VXNlcklkKCdpLWFtLWpvaG4nKTtcbiAqICAgfSBjYXRjaCAoZSl7XG4gKiAgICAgY29uc29sZS5sb2coZSk7XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0FwcENlbnRlcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWFwcGNlbnRlci1zaGFyZWQnLFxuICBwbHVnaW5SZWY6ICdBcHBDZW50ZXInLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9hcHBjZW50ZXItc2RrLWNvcmRvdmEvdHJlZS9tYXN0ZXIvY29yZG92YS1wbHVnaW4tYXBwY2VudGVyLXNoYXJlZCcsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBcHBDZW50ZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBSZXR1cm5zIEFwcENlbnRlciBVVUlELlxuICAgKiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlOiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9hcHBjZW50ZXIvc2RrL290aGVyLWFwaXMvY29yZG92YSNpZGVudGlmeS1pbnN0YWxsYXRpb25zXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHN0cmluZz59IEluc3RhbGwgSURcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0SW5zdGFsbElkKCk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCBhIHVzZXIgSUQgdGhhdCdzIHVzZWQgdG8gYXVnbWVudCBjcmFzaCByZXBvcnRzLlxuICAgKiBGb3IgbW9yZSBpbmZvLCBwbGVhc2Ugc2VlOiBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9hcHBjZW50ZXIvc2RrL290aGVyLWFwaXMvY29yZG92YSNpZGVudGlmeS11c2Vyc1xuICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIEV4LiBcInlvdXItdXNlci1pZFwiXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXRVc2VySWQodXNlcklkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==