import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Observable } from 'rxjs';
var Appodeal = /** @class */ (function (_super) {
    __extends(Appodeal, _super);
    function Appodeal() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // available types of advertisements
        _this.AD_TYPES = {
            INTERSTITIAL: 1,
            SKIPPABLE_VIDEO: 2,
            BANNER: 4,
            BANNER_BOTTOM: 8,
            BANNER_TOP: 16,
            REWARDED_VIDEO: 128,
            NON_SKIPPABLE_VIDEO: 256,
        };
        return _this;
    }
    Appodeal.prototype.initialize = function (appKey, adType) { return cordova(this, "initialize", {}, arguments); };
    Appodeal.prototype.isInitialized = function () { return cordova(this, "isInitialized", {}, arguments); };
    Appodeal.prototype.show = function (adType) { return cordova(this, "show", {}, arguments); };
    Appodeal.prototype.showWithPlacement = function (adType, placement) { return cordova(this, "showWithPlacement", {}, arguments); };
    Appodeal.prototype.hide = function (adType) { return cordova(this, "hide", {}, arguments); };
    Appodeal.prototype.canShow = function (adType) { return cordova(this, "canShow", {}, arguments); };
    Appodeal.prototype.isLoaded = function (adType) { return cordova(this, "isLoaded", {}, arguments); };
    Appodeal.prototype.isPrecache = function (adType) { return cordova(this, "isPrecache", {}, arguments); };
    Appodeal.prototype.setAutoCache = function (adType, autoCache) { return cordova(this, "setAutoCache", {}, arguments); };
    Appodeal.prototype.cache = function (adType) { return cordova(this, "cache", {}, arguments); };
    Appodeal.prototype.setTriggerOnLoadedOnPrecache = function (set) { return cordova(this, "setTriggerOnLoadedOnPrecache", {}, arguments); };
    Appodeal.prototype.setSmartBanners = function (enabled) { return cordova(this, "setSmartBanners", {}, arguments); };
    Appodeal.prototype.setBannerBackground = function (enabled) { return cordova(this, "setBannerBackground", {}, arguments); };
    Appodeal.prototype.setBannerAnimation = function (enabled) { return cordova(this, "setBannerAnimation", {}, arguments); };
    Appodeal.prototype.set728x90Banners = function (value) { return cordova(this, "set728x90Banners", {}, arguments); };
    Appodeal.prototype.setLogLevel = function (logging) { return cordova(this, "setLogLevel", {}, arguments); };
    Appodeal.prototype.setTesting = function (testing) { return cordova(this, "setTesting", {}, arguments); };
    Appodeal.prototype.resetUUID = function () { return cordova(this, "resetUUID", {}, arguments); };
    Appodeal.prototype.getVersion = function () { return cordova(this, "getVersion", {}, arguments); };
    Appodeal.prototype.disableNetwork = function (network, adType) { return cordova(this, "disableNetwork", {}, arguments); };
    Appodeal.prototype.disableNetworkType = function (network, adType) { return cordova(this, "disableNetworkType", {}, arguments); };
    Appodeal.prototype.disableLocationPermissionCheck = function () { return cordova(this, "disableLocationPermissionCheck", {}, arguments); };
    Appodeal.prototype.disableWriteExternalStoragePermissionCheck = function () { return cordova(this, "disableWriteExternalStoragePermissionCheck", {}, arguments); };
    Appodeal.prototype.enableInterstitialCallbacks = function (enabled) { return cordova(this, "enableInterstitialCallbacks", {}, arguments); };
    Appodeal.prototype.enableSkippableVideoCallbacks = function (enabled) { return cordova(this, "enableSkippableVideoCallbacks", {}, arguments); };
    Appodeal.prototype.enableNonSkippableVideoCallbacks = function (enabled) { return cordova(this, "enableNonSkippableVideoCallbacks", {}, arguments); };
    Appodeal.prototype.enableBannerCallbacks = function (enabled) { return cordova(this, "enableBannerCallbacks", {}, arguments); };
    Appodeal.prototype.enableRewardedVideoCallbacks = function (enabled) { return cordova(this, "enableRewardedVideoCallbacks", {}, arguments); };
    Appodeal.prototype.setCustomBooleanRule = function (name, value) { return cordova(this, "setCustomBooleanRule", {}, arguments); };
    Appodeal.prototype.setCustomIntegerRule = function (name, value) { return cordova(this, "setCustomIntegerRule", {}, arguments); };
    Appodeal.prototype.setCustomDoubleRule = function (name, value) { return cordova(this, "setCustomDoubleRule", {}, arguments); };
    Appodeal.prototype.setCustomStringRule = function (name, value) { return cordova(this, "setCustomStringRule", {}, arguments); };
    Appodeal.prototype.setUserId = function (id) { return cordova(this, "setUserId", {}, arguments); };
    Appodeal.prototype.setEmail = function (email) { return cordova(this, "setEmail", {}, arguments); };
    Appodeal.prototype.setBirthday = function (birthday) { return cordova(this, "setBirthday", {}, arguments); };
    Appodeal.prototype.setAge = function (age) { return cordova(this, "setAge", {}, arguments); };
    Appodeal.prototype.setGender = function (gender) { return cordova(this, "setGender", {}, arguments); };
    Appodeal.prototype.setOccupation = function (occupation) { return cordova(this, "setOccupation", {}, arguments); };
    Appodeal.prototype.setRelation = function (relation) { return cordova(this, "setRelation", {}, arguments); };
    Appodeal.prototype.setSmoking = function (smoking) { return cordova(this, "setSmoking", {}, arguments); };
    Appodeal.prototype.setAlcohol = function (alcohol) { return cordova(this, "setAlcohol", {}, arguments); };
    Appodeal.prototype.setInterests = function (interests) { return cordova(this, "setInterests", {}, arguments); };
    Appodeal.prototype.onInterstitialLoaded = function () { return cordova(this, "onInterstitialLoaded", { "eventObservable": true, "event": "onInterstitialLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onInterstitialFailedToLoad = function () { return cordova(this, "onInterstitialFailedToLoad", { "eventObservable": true, "event": "onInterstitialFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onInterstitialShown = function () { return cordova(this, "onInterstitialShown", { "eventObservable": true, "event": "onInterstitialShown", "element": "document" }, arguments); };
    Appodeal.prototype.onInterstitialClicked = function () { return cordova(this, "onInterstitialClicked", { "eventObservable": true, "event": "onInterstitialClicked", "element": "document" }, arguments); };
    Appodeal.prototype.onInterstitialClosed = function () { return cordova(this, "onInterstitialClosed", { "eventObservable": true, "event": "onInterstitialClosed", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoLoaded = function () { return cordova(this, "onSkippableVideoLoaded", { "eventObservable": true, "event": "onSkippableVideoLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoFailedToLoad = function () { return cordova(this, "onSkippableVideoFailedToLoad", { "eventObservable": true, "event": "onSkippableVideoFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoShown = function () { return cordova(this, "onSkippableVideoShown", { "eventObservable": true, "event": "onSkippableVideoShown", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoFinished = function () { return cordova(this, "onSkippableVideoFinished", { "eventObservable": true, "event": "onSkippableVideoFinished", "element": "document" }, arguments); };
    Appodeal.prototype.onSkippableVideoClosed = function () { return cordova(this, "onSkippableVideoClosed", { "eventObservable": true, "event": "onSkippableVideoClosed", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoLoaded = function () { return cordova(this, "onRewardedVideoLoaded", { "eventObservable": true, "event": "onRewardedVideoLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoFailedToLoad = function () { return cordova(this, "onRewardedVideoFailedToLoad", { "eventObservable": true, "event": "onRewardedVideoFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoShown = function () { return cordova(this, "onRewardedVideoShown", { "eventObservable": true, "event": "onRewardedVideoShown", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoFinished = function () { return cordova(this, "onRewardedVideoFinished", { "eventObservable": true, "event": "onRewardedVideoFinished", "element": "document" }, arguments); };
    Appodeal.prototype.onRewardedVideoClosed = function () { return cordova(this, "onRewardedVideoClosed", { "eventObservable": true, "event": "onRewardedVideoClosed", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoLoaded = function () { return cordova(this, "onNonSkippableVideoLoaded", { "eventObservable": true, "event": "onNonSkippableVideoLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoFailedToLoad = function () { return cordova(this, "onNonSkippableVideoFailedToLoad", { "eventObservable": true, "event": "onNonSkippableVideoFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoShown = function () { return cordova(this, "onNonSkippableVideoShown", { "eventObservable": true, "event": "onNonSkippableVideoShown", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoFinished = function () { return cordova(this, "onNonSkippableVideoFinished", { "eventObservable": true, "event": "onNonSkippableVideoFinished", "element": "document" }, arguments); };
    Appodeal.prototype.onNonSkippableVideoClosed = function () { return cordova(this, "onNonSkippableVideoClosed", { "eventObservable": true, "event": "onNonSkippableVideoClosed", "element": "document" }, arguments); };
    Appodeal.prototype.onBannerClicked = function () { return cordova(this, "onBannerClicked", { "eventObservable": true, "event": "onBannerClicked", "element": "document" }, arguments); };
    Appodeal.prototype.onBannerFailedToLoad = function () { return cordova(this, "onBannerFailedToLoad", { "eventObservable": true, "event": "onBannerFailedToLoad", "element": "document" }, arguments); };
    Appodeal.prototype.onBannerLoaded = function () { return cordova(this, "onBannerLoaded", { "eventObservable": true, "event": "onBannerLoaded", "element": "document" }, arguments); };
    Appodeal.prototype.onBannerShown = function () { return cordova(this, "onBannerShown", { "eventObservable": true, "event": "onBannerShown", "element": "document" }, arguments); };
    Appodeal.prototype.getRewardParametersForPlacement = function (placement) { return cordova(this, "getRewardParametersForPlacement", {}, arguments); };
    Appodeal.prototype.getRewardParameters = function () { return cordova(this, "getRewardParameters", {}, arguments); };
    Appodeal.prototype.canShowWithPlacement = function (adType, placement) { return cordova(this, "canShowWithPlacement", {}, arguments); };
    Appodeal.prototype.showTestScreen = function (value) { return cordova(this, "showTestScreen", { "platforms": ["Android"] }, arguments); };
    Appodeal.prototype.muteVideosIfCallsMuted = function (value) { return cordova(this, "muteVideosIfCallsMuted", {}, arguments); };
    Appodeal.prototype.setChildDirectedTreatment = function (value) { return cordova(this, "setChildDirectedTreatment", {}, arguments); };
    Appodeal.pluginName = "Appodeal";
    Appodeal.plugin = "https://github.com/appodeal/appodeal-cordova-plugin.git";
    Appodeal.pluginRef = "Appodeal";
    Appodeal.repo = "https://github.com/appodeal/appodeal-cordova-plugin";
    Appodeal.platforms = ["iOS", "Android"];
    Appodeal.decorators = [
        { type: Injectable }
    ];
    return Appodeal;
}(IonicNativePlugin));
export { Appodeal };
//# sourceMappingURL=data:application/json;base64,