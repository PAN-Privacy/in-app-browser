'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var core$1 = require('@angular/core');
var core = require('@ionic-native/core');

var CleverTap = /** @class */ (function (_super) {
    tslib.__extends(CleverTap, _super);
    function CleverTap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CleverTap.prototype.notifyDeviceReady = function () { return core.cordova(this, "notifyDeviceReady", {}, arguments); };
    CleverTap.prototype.enablePersonalization = function () { return core.cordova(this, "enablePersonalization", {}, arguments); };
    CleverTap.prototype.disablePersonalization = function () { return core.cordova(this, "disablePersonalization", {}, arguments); };
    CleverTap.prototype.setOptOut = function (optOut) { return core.cordova(this, "setOptOut", {}, arguments); };
    CleverTap.prototype.setOffline = function (offline) { return core.cordova(this, "setOffline", {}, arguments); };
    CleverTap.prototype.enableDeviceNetworkInfoReporting = function (enable) { return core.cordova(this, "enableDeviceNetworkInfoReporting", {}, arguments); };
    CleverTap.prototype.registerPush = function () { return core.cordova(this, "registerPush", {}, arguments); };
    CleverTap.prototype.setPushToken = function (token) { return core.cordova(this, "setPushToken", {}, arguments); };
    CleverTap.prototype.setPushXiaomiToken = function (token) { return core.cordova(this, "setPushXiaomiToken", {}, arguments); };
    CleverTap.prototype.setPushBaiduToken = function (token) { return core.cordova(this, "setPushBaiduToken", {}, arguments); };
    CleverTap.prototype.setPushHuaweiToken = function (token) { return core.cordova(this, "setPushHuaweiToken", {}, arguments); };
    CleverTap.prototype.createNotification = function (extras) { return core.cordova(this, "createNotification", {}, arguments); };
    CleverTap.prototype.createNotificationChannel = function (channelID, channelName, channelDescription, importance, showBadge) { return core.cordova(this, "createNotificationChannel", {}, arguments); };
    CleverTap.prototype.createNotificationChannelWithSound = function (channelID, channelName, channelDescription, importance, showBadge, sound) { return core.cordova(this, "createNotificationChannelWithSound", {}, arguments); };
    CleverTap.prototype.createNotificationChannelWithGroupId = function (channelID, channelName, channelDescription, importance, groupId, showBadge) { return core.cordova(this, "createNotificationChannelWithGroupId", {}, arguments); };
    CleverTap.prototype.createNotificationChannelWithGroupIdAndSound = function (channelID, channelName, channelDescription, importance, groupId, showBadge, sound) { return core.cordova(this, "createNotificationChannelWithGroupIdAndSound", {}, arguments); };
    CleverTap.prototype.createNotificationChannelGroup = function (groupID, groupName) { return core.cordova(this, "createNotificationChannelGroup", {}, arguments); };
    CleverTap.prototype.deleteNotificationChannel = function (channelID) { return core.cordova(this, "deleteNotificationChannel", {}, arguments); };
    CleverTap.prototype.deleteNotificationChannelGroup = function (groupID) { return core.cordova(this, "deleteNotificationChannelGroup", {}, arguments); };
    CleverTap.prototype.recordScreenView = function (screenName) { return core.cordova(this, "recordScreenView", {}, arguments); };
    CleverTap.prototype.recordEventWithName = function (eventName) { return core.cordova(this, "recordEventWithName", {}, arguments); };
    CleverTap.prototype.recordEventWithNameAndProps = function (eventName, eventProps) { return core.cordova(this, "recordEventWithNameAndProps", {}, arguments); };
    CleverTap.prototype.recordChargedEventWithDetailsAndItems = function (details, items) { return core.cordova(this, "recordChargedEventWithDetailsAndItems", {}, arguments); };
    CleverTap.prototype.eventGetFirstTime = function (eventName) { return core.cordova(this, "eventGetFirstTime", {}, arguments); };
    CleverTap.prototype.eventGetLastTime = function (eventName) { return core.cordova(this, "eventGetLastTime", {}, arguments); };
    CleverTap.prototype.eventGetOccurrences = function (eventName) { return core.cordova(this, "eventGetOccurrences", {}, arguments); };
    CleverTap.prototype.eventGetDetails = function (eventName) { return core.cordova(this, "eventGetDetails", {}, arguments); };
    CleverTap.prototype.getEventHistory = function () { return core.cordova(this, "getEventHistory", {}, arguments); };
    CleverTap.prototype.getLocation = function () { return core.cordova(this, "getLocation", {}, arguments); };
    CleverTap.prototype.setLocation = function (lat, lon) { return core.cordova(this, "setLocation", {}, arguments); };
    CleverTap.prototype.onUserLogin = function (profile) { return core.cordova(this, "onUserLogin", {}, arguments); };
    CleverTap.prototype.profileSet = function (profile) { return core.cordova(this, "profileSet", {}, arguments); };
    CleverTap.prototype.profileSetGraphUser = function (profile) { return core.cordova(this, "profileSetGraphUser", {}, arguments); };
    CleverTap.prototype.profileGooglePlusUser = function (profile) { return core.cordova(this, "profileGooglePlusUser", {}, arguments); };
    CleverTap.prototype.profileGetProperty = function (propertyName) { return core.cordova(this, "profileGetProperty", {}, arguments); };
    CleverTap.prototype.profileGetCleverTapAttributionIdentifier = function () { return core.cordova(this, "profileGetCleverTapAttributionIdentifier", {}, arguments); };
    CleverTap.prototype.profileGetCleverTapID = function () { return core.cordova(this, "profileGetCleverTapID", {}, arguments); };
    CleverTap.prototype.profileRemoveValueForKey = function (key) { return core.cordova(this, "profileRemoveValueForKey", {}, arguments); };
    CleverTap.prototype.profileSetMultiValues = function (key, values) { return core.cordova(this, "profileSetMultiValues", {}, arguments); };
    CleverTap.prototype.profileAddMultiValue = function (key, value) { return core.cordova(this, "profileAddMultiValue", {}, arguments); };
    CleverTap.prototype.profileAddMultiValues = function (key, values) { return core.cordova(this, "profileAddMultiValues", {}, arguments); };
    CleverTap.prototype.profileRemoveMultiValue = function (key, value) { return core.cordova(this, "profileRemoveMultiValue", {}, arguments); };
    CleverTap.prototype.profileRemoveMultiValues = function (key, values) { return core.cordova(this, "profileRemoveMultiValues", {}, arguments); };
    CleverTap.prototype.sessionGetTimeElapsed = function () { return core.cordova(this, "sessionGetTimeElapsed", {}, arguments); };
    CleverTap.prototype.sessionGetTotalVisits = function () { return core.cordova(this, "sessionGetTotalVisits", {}, arguments); };
    CleverTap.prototype.sessionGetScreenCount = function () { return core.cordova(this, "sessionGetScreenCount", {}, arguments); };
    CleverTap.prototype.sessionGetPreviousVisitTime = function () { return core.cordova(this, "sessionGetPreviousVisitTime", {}, arguments); };
    CleverTap.prototype.sessionGetUTMDetails = function () { return core.cordova(this, "sessionGetUTMDetails", {}, arguments); };
    CleverTap.prototype.pushInstallReferrer = function (source, medium, campaign) { return core.cordova(this, "pushInstallReferrer", {}, arguments); };
    CleverTap.prototype.initializeInbox = function () { return core.cordova(this, "initializeInbox", {}, arguments); };
    CleverTap.prototype.getInboxMessageUnreadCount = function () { return core.cordova(this, "getInboxMessageUnreadCount", {}, arguments); };
    CleverTap.prototype.getInboxMessageCount = function () { return core.cordova(this, "getInboxMessageCount", {}, arguments); };
    CleverTap.prototype.showInbox = function (styleConfig) { return core.cordova(this, "showInbox", {}, arguments); };
    CleverTap.prototype.getAllInboxMessages = function () { return core.cordova(this, "getAllInboxMessages", {}, arguments); };
    CleverTap.prototype.getUnreadInboxMessages = function () { return core.cordova(this, "getUnreadInboxMessages", {}, arguments); };
    CleverTap.prototype.getInboxMessageForId = function (messageId) { return core.cordova(this, "getInboxMessageForId", {}, arguments); };
    CleverTap.prototype.deleteInboxMessageForId = function (messageId) { return core.cordova(this, "deleteInboxMessageForId", {}, arguments); };
    CleverTap.prototype.markReadInboxMessageForId = function (messageId) { return core.cordova(this, "markReadInboxMessageForId", {}, arguments); };
    CleverTap.prototype.pushInboxNotificationViewedEventForId = function (messageId) { return core.cordova(this, "pushInboxNotificationViewedEventForId", {}, arguments); };
    CleverTap.prototype.pushInboxNotificationClickedEventForId = function (messageId) { return core.cordova(this, "pushInboxNotificationClickedEventForId", {}, arguments); };
    CleverTap.prototype.setUIEditorConnectionEnabled = function (enabled) { return core.cordova(this, "setUIEditorConnectionEnabled", {}, arguments); };
    CleverTap.prototype.registerBooleanVariable = function (varName) { return core.cordova(this, "registerBooleanVariable", {}, arguments); };
    CleverTap.prototype.registerDoubleVariable = function (varName) { return core.cordova(this, "registerDoubleVariable", {}, arguments); };
    CleverTap.prototype.registerIntegerVariable = function (varName) { return core.cordova(this, "registerIntegerVariable", {}, arguments); };
    CleverTap.prototype.registerStringVariable = function (varName) { return core.cordova(this, "registerStringVariable", {}, arguments); };
    CleverTap.prototype.registerListOfBooleanVariable = function (varName) { return core.cordova(this, "registerListOfBooleanVariable", {}, arguments); };
    CleverTap.prototype.registerListOfDoubleVariable = function (varName) { return core.cordova(this, "registerListOfDoubleVariable", {}, arguments); };
    CleverTap.prototype.registerListOfIntegerVariable = function (varName) { return core.cordova(this, "registerListOfIntegerVariable", {}, arguments); };
    CleverTap.prototype.registerListOfStringVariable = function (varName) { return core.cordova(this, "registerListOfStringVariable", {}, arguments); };
    CleverTap.prototype.registerMapOfBooleanVariable = function (varName) { return core.cordova(this, "registerMapOfBooleanVariable", {}, arguments); };
    CleverTap.prototype.registerMapOfDoubleVariable = function (varName) { return core.cordova(this, "registerMapOfDoubleVariable", {}, arguments); };
    CleverTap.prototype.registerMapOfIntegerVariable = function (varName) { return core.cordova(this, "registerMapOfIntegerVariable", {}, arguments); };
    CleverTap.prototype.registerMapOfStringVariable = function (varName) { return core.cordova(this, "registerMapOfStringVariable", {}, arguments); };
    CleverTap.prototype.getBooleanVariable = function (varName, defaultValue) { return core.cordova(this, "getBooleanVariable", {}, arguments); };
    CleverTap.prototype.getDoubleVariable = function (varName, defaultValue) { return core.cordova(this, "getDoubleVariable", {}, arguments); };
    CleverTap.prototype.getIntegerVariable = function (varName, defaultValue) { return core.cordova(this, "getIntegerVariable", {}, arguments); };
    CleverTap.prototype.getStringVariable = function (varName, defaultValue) { return core.cordova(this, "getStringVariable", {}, arguments); };
    CleverTap.prototype.getListOfBooleanVariable = function (varName, defaultValue) { return core.cordova(this, "getListOfBooleanVariable", {}, arguments); };
    CleverTap.prototype.getListOfDoubleVariable = function (varName, defaultValue) { return core.cordova(this, "getListOfDoubleVariable", {}, arguments); };
    CleverTap.prototype.getListOfIntegerVariable = function (varName, defaultValue) { return core.cordova(this, "getListOfIntegerVariable", {}, arguments); };
    CleverTap.prototype.getListOfStringVariable = function (varName, defaultValue) { return core.cordova(this, "getListOfStringVariable", {}, arguments); };
    CleverTap.prototype.getMapOfBooleanVariable = function (varName, defaultValue) { return core.cordova(this, "getMapOfBooleanVariable", {}, arguments); };
    CleverTap.prototype.getMapOfDoubleVariable = function (varName, defaultValue) { return core.cordova(this, "getMapOfDoubleVariable", {}, arguments); };
    CleverTap.prototype.getMapOfIntegerVariable = function (varName, defaultValue) { return core.cordova(this, "getMapOfIntegerVariable", {}, arguments); };
    CleverTap.prototype.getMapOfStringVariable = function (varName, defaultValue) { return core.cordova(this, "getMapOfStringVariable", {}, arguments); };
    CleverTap.prototype.getAllDisplayUnits = function () { return core.cordova(this, "getAllDisplayUnits", {}, arguments); };
    CleverTap.prototype.getDisplayUnitForId = function (id) { return core.cordova(this, "getDisplayUnitForId", {}, arguments); };
    CleverTap.prototype.pushDisplayUnitViewedEventForID = function (id) { return core.cordova(this, "pushDisplayUnitViewedEventForID", {}, arguments); };
    CleverTap.prototype.pushDisplayUnitClickedEventForID = function (id) { return core.cordova(this, "pushDisplayUnitClickedEventForID", {}, arguments); };
    CleverTap.prototype.getFeatureFlag = function (key, defaultValue) { return core.cordova(this, "getFeatureFlag", {}, arguments); };
    CleverTap.prototype.setDefaultsMap = function (defaults) { return core.cordova(this, "setDefaultsMap", {}, arguments); };
    CleverTap.prototype.fetch = function () { return core.cordova(this, "fetch", {}, arguments); };
    CleverTap.prototype.fetchWithMinimumFetchIntervalInSeconds = function (timeInterval) { return core.cordova(this, "fetchWithMinimumFetchIntervalInSeconds", {}, arguments); };
    CleverTap.prototype.activate = function () { return core.cordova(this, "activate", {}, arguments); };
    CleverTap.prototype.fetchAndActivate = function () { return core.cordova(this, "fetchAndActivate", {}, arguments); };
    CleverTap.prototype.setMinimumFetchIntervalInSeconds = function (timeInterval) { return core.cordova(this, "setMinimumFetchIntervalInSeconds", {}, arguments); };
    CleverTap.prototype.getLastFetchTimeStampInMillis = function () { return core.cordova(this, "getLastFetchTimeStampInMillis", {}, arguments); };
    CleverTap.prototype.getString = function () { return core.cordova(this, "getString", {}, arguments); };
    CleverTap.prototype.getBoolean = function () { return core.cordova(this, "getBoolean", {}, arguments); };
    CleverTap.prototype.getLong = function () { return core.cordova(this, "getLong", {}, arguments); };
    CleverTap.prototype.getDouble = function () { return core.cordova(this, "getDouble", {}, arguments); };
    CleverTap.prototype.reset = function () { return core.cordova(this, "reset", {}, arguments); };
    CleverTap.prototype.setDebugLevel = function (level) { return core.cordova(this, "setDebugLevel", {}, arguments); };
    CleverTap.pluginName = "CleverTap";
    CleverTap.plugin = "clevertap-cordova";
    CleverTap.pluginRef = "CleverTap";
    CleverTap.repo = "https://github.com/CleverTap/clevertap-cordova";
    CleverTap.platforms = ["Android", "iOS"];
    CleverTap.decorators = [
        { type: core$1.Injectable }
    ];
    return CleverTap;
}(core.IonicNativePlugin));

exports.CleverTap = CleverTap;
