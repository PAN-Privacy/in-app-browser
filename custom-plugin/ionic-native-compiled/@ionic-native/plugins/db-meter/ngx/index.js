import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Observable } from 'rxjs';
var DBMeter = /** @class */ (function (_super) {
    __extends(DBMeter, _super);
    function DBMeter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DBMeter.prototype.start = function () { return cordova(this, "start", { "observable": true, "clearFunction": "stop" }, arguments); };
    DBMeter.prototype.stop = function () { return cordova(this, "stop", {}, arguments); };
    DBMeter.prototype.isListening = function () { return cordova(this, "isListening", {}, arguments); };
    DBMeter.prototype.delete = function () { return cordova(this, "delete", {}, arguments); };
    DBMeter.pluginName = "DBMeter";
    DBMeter.plugin = "cordova-plugin-dbmeter";
    DBMeter.pluginRef = "DBMeter";
    DBMeter.repo = "https://github.com/akofman/cordova-plugin-dbmeter";
    DBMeter.platforms = ["Android", "iOS"];
    DBMeter.decorators = [
        { type: Injectable }
    ];
    return DBMeter;
}(IonicNativePlugin));
export { DBMeter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2RiLW1ldGVyL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxNQUFNLENBQUM7O0lBMENMLDJCQUFpQjs7OztJQVM1Qyx1QkFBSztJQVNMLHNCQUFJO0lBU0osNkJBQVc7SUFTWCx3QkFBTTs7Ozs7OztnQkFyQ1AsVUFBVTs7a0JBM0NYO0VBNEM2QixpQkFBaUI7U0FBakMsT0FBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG4vKipcbiAqIEBuYW1lIERCIE1ldGVyXG4gKiBAZGVzY3JpcHRpb24gVGhpcyBwbHVnaW4gZGVmaW5lcyBhIGdsb2JhbCBEQk1ldGVyIG9iamVjdCwgd2hpY2ggcGVybWl0cyB0byBnZXQgdGhlIGRlY2liZWwgdmFsdWVzIGZyb20gdGhlIG1pY3JvcGhvbmUuXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IERCTWV0ZXIgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2RiLW1ldGVyL25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBkYk1ldGVyOiBEQk1ldGVyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKlxuICogLy8gU3RhcnQgbGlzdGVuaW5nXG4gKiBsZXQgc3Vic2NyaXB0aW9uID0gdGhpcy5kYk1ldGVyLnN0YXJ0KCkuc3Vic2NyaWJlKFxuICogICBkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpXG4gKiApO1xuICpcbiAqIC8vIENoZWNrIGlmIHdlIGFyZSBsaXN0ZW5pbmdcbiAqIHRoaXMuZGJNZXRlci5pc0xpc3RlbmluZygpLnRoZW4oXG4gKiAgIGlzTGlzdGVuaW5nID0+IGNvbnNvbGUubG9nKGlzTGlzdGVuaW5nKVxuICogKTtcbiAqXG4gKiAvLyBTdG9wIGxpc3RlbmluZ1xuICogc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gKlxuICogLy8gRGVsZXRlIERCTWV0ZXIgaW5zdGFuY2UgZnJvbSBtZW1vcnlcbiAqIHRoaXMuZGJNZXRlci5kZWxldGUoKS50aGVuKFxuICogICAoKSA9PiBjb25zb2xlLmxvZygnRGVsZXRlZCBEQiBNZXRlciBpbnN0YW5jZScpLFxuICogICBlcnJvciA9PiBjb25zb2xlLmxvZygnRXJyb3Igb2NjdXJyZWQgd2hpbGUgZGVsZXRpbmcgREIgTWV0ZXIgaW5zdGFuY2UnKVxuICogKTtcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0RCTWV0ZXInLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1kYm1ldGVyJyxcbiAgcGx1Z2luUmVmOiAnREJNZXRlcicsXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vYWtvZm1hbi9jb3Jkb3ZhLXBsdWdpbi1kYm1ldGVyJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERCTWV0ZXIgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBTdGFydHMgbGlzdGVuaW5nXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPGFueT59IFJldHVybnMgYW4gb2JzZXJ2YWJsZS4gU3Vic2NyaWJlIHRvIHN0YXJ0IGxpc3RlbmluZy4gVW5zdWJzY3JpYmUgdG8gc3RvcCBsaXN0ZW5pbmcuXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcbiAgICBjbGVhckZ1bmN0aW9uOiAnc3RvcCcsXG4gIH0pXG4gIHN0YXJ0KCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3BzIGxpc3RlbmluZ1xuICAgKiBAaGlkZGVuXG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHN0b3AoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgaWYgdGhlIERCIE1ldGVyIGlzIGxpc3RlbmluZ1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgYm9vbGVhbiB0aGF0IHRlbGxzIHVzIHdoZXRoZXIgdGhlIERCIG1ldGVyIGlzIGxpc3RlbmluZ1xuICAgKi9cbiAgQENvcmRvdmEoKVxuICBpc0xpc3RlbmluZygpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGVsZXRlIHRoZSBEQiBNZXRlciBpbnN0YW5jZVxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHdpbGwgcmVzb2x2ZSBpZiB0aGUgaW5zdGFuY2UgaGFzIGJlZW4gZGVsZXRlZCwgYW5kIHJlamVjdHMgaWYgZXJyb3JzIG9jY3VyLlxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBkZWxldGUoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==