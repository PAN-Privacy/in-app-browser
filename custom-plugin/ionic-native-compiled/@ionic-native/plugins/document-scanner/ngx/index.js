import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
export var DocumentScannerSourceType;
(function (DocumentScannerSourceType) {
    /**
     * Scan directly from device camera.
     * This is the default.
     */
    DocumentScannerSourceType[DocumentScannerSourceType["CAMERA"] = 1] = "CAMERA";
    /**
     * Scan from an image already stored on device.
     */
    DocumentScannerSourceType[DocumentScannerSourceType["GALLERY"] = 0] = "GALLERY";
})(DocumentScannerSourceType || (DocumentScannerSourceType = {}));
var DocumentScanner = /** @class */ (function (_super) {
    __extends(DocumentScanner, _super);
    function DocumentScanner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DocumentScanner.prototype.scanDoc = function (opts) { return cordova(this, "scanDoc", { "callbackOrder": "reverse" }, arguments); };
    DocumentScanner.pluginName = "DocumentScanner";
    DocumentScanner.plugin = "cordova-plugin-document-scanner";
    DocumentScanner.pluginRef = "scan";
    DocumentScanner.repo = "https://github.com/NeutrinosPlatform/cordova-plugin-document-scanner";
    DocumentScanner.platforms = ["Android", "iOS"];
    DocumentScanner.decorators = [
        { type: Injectable }
    ];
    return DocumentScanner;
}(IonicNativePlugin));
export { DocumentScanner };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2RvY3VtZW50LXNjYW5uZXIvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7QUFFeEUsTUFBTSxDQUFOLElBQVkseUJBV1g7QUFYRCxXQUFZLHlCQUF5QjtJQUNuQzs7O09BR0c7SUFDSCw2RUFBVSxDQUFBO0lBRVY7O09BRUc7SUFDSCwrRUFBVyxDQUFBO0FBQ2IsQ0FBQyxFQVhXLHlCQUF5QixLQUF6Qix5QkFBeUIsUUFXcEM7O0lBa0VvQyxtQ0FBaUI7Ozs7SUFTcEQsaUNBQU8sYUFBQyxJQUE2Qjs7Ozs7OztnQkFWdEMsVUFBVTs7MEJBL0VYO0VBZ0ZxQyxpQkFBaUI7U0FBekMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgZW51bSBEb2N1bWVudFNjYW5uZXJTb3VyY2VUeXBlIHtcbiAgLyoqXG4gICAqIFNjYW4gZGlyZWN0bHkgZnJvbSBkZXZpY2UgY2FtZXJhLlxuICAgKiBUaGlzIGlzIHRoZSBkZWZhdWx0LlxuICAgKi9cbiAgQ0FNRVJBID0gMSxcblxuICAvKipcbiAgICogU2NhbiBmcm9tIGFuIGltYWdlIGFscmVhZHkgc3RvcmVkIG9uIGRldmljZS5cbiAgICovXG4gIEdBTExFUlkgPSAwLFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIERvY3VtZW50U2Nhbm5lck9wdGlvbnMge1xuICAvKipcbiAgICogQ2hvb3NlIHRvIHNjYW4gZnJvbSBjYW1lcmEgb3IgZXhpc3RpbmcgaW1hZ2UgZmlsZS4gT25seSB2YWxpZCBmb3IgQW5kcm9pZC5cbiAgICovXG4gIHNvdXJjZVR5cGU/OiBEb2N1bWVudFNjYW5uZXJTb3VyY2VUeXBlO1xuXG4gIC8qKlxuICAgKiBGaWxlbmFtZSB0byBzYXZlIHNjYW5uZWQgaW1hZ2UgdG8gKG1pbnVzIGV4dGVuc2lvbiwgd2hpY2ggaXMgYWx3YXlzIFwiLnBuZ1wiKS5cbiAgICogT25seSB2YWxpZCBmb3IgaU9TLiBDYWxsZXIgaXMgcmVzcG9uc2libGUgZm9yIGNsZWFuaW5nIHVwIGFueSBmaWxlcyBjcmVhdGVkXG4gICAqIGlmIHRoaXMgcGFyYW1ldGVyIGlzIHNldCB0byBhbnl0aGluZyBvdGhlciB0aGFuIHRoZSBkZWZhdWx0IHZhbHVlLFxuICAgKiB3aGljaCBpcyBcImltYWdlXCIuXG4gICAqL1xuICBmaWxlTmFtZT86IHN0cmluZztcblxuICAvKipcbiAgICogUXVhbGl0eSB0byB1c2Ugd2hlbiBjYXB0dXJpbmcgdGhlIGltYWdlLCBtdXN0IGJlIGEgZmxvYXQgdmFsdWVcbiAgICogZnJvbSAxLjAoZGVmYXVsdCAtIEhpZ2hlc3QgcXVhbGl0eSkgdG8gNS4wKExvd2VzdCBRdWFsaXR5KS4gQW55IHZhbHVlXG4gICAqIGluIGJldHdlZW4gd2lsbCBiZSBhY2NlcHRlZC4gQW55IHZhbHVlIG5vdCBlcXVhbCB0byBvciBub3QgYmV0d2VlbiB0aGVzZSB2YWx1ZXNcbiAgICogIHdpbGwgZGVmYXVsdCB0byB0aGUgaGlnaGVzdCBxdWFsaXR5IG9mIDEuMC5cbiAgICovXG4gIHF1YWxpdHk/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIElmIHRoZSBpbWFnZSBzaG91bGQgYmUgcmV0dXJuZWQgYXMgYSBiYXNlNjQgZW5jb2RpbmcgaW5zdGVhZCBvZiBhcyBhIGZpbGUgVVJMLlxuICAgKiBJZiB0cnVlLCB0aGUgcGx1Z2luIHdpbGwgcmV0dXJuIHRoZSBzY2FubmVkIGltYWdlIGFzIGJhc2U2NC4gSWYgZmFsc2UsXG4gICAqIHRoZSBwbHVnaW4gd2lsbCByZXR1cm4gdGhlIGltYWdlIFVSTCBvZiB0aGUgaW1hZ2UuXG4gICAqL1xuICByZXR1cm5CYXNlNjQ/OiBib29sZWFuO1xufVxuXG4vKipcbiAqIEBuYW1lIERvY3VtZW50IFNjYW5uZXJcbiAqIEBkZXNjcmlwdGlvblxuICogVGhpcyBwbHVnaW4gcHJvY2Vzc2VzIGltYWdlcyBvZiBkb2N1bWVudHMsIGNvbXBlbnNhdGluZyBmb3IgcGVyc3BlY3RpdmUuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBEb2N1bWVudFNjYW5uZXIsIERvY3VtZW50U2Nhbm5lck9wdGlvbnMgfSBmcm9tICdAaW9uaWMtbmF0aXZlL2RvY3VtZW50LXNjYW5uZXInO1xuICpcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGRvY3VtZW50U2Nhbm5lcjogRG9jdW1lbnRTY2FubmVyKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiBsZXQgb3B0czogRG9jdW1lbnRTY2FubmVyT3B0aW9ucyA9IHt9O1xuICogdGhpcy5kb2N1bWVudFNjYW5uZXIuc2NhbkRvY3VtZW50KG9wdHMpXG4gKiAgIC50aGVuKChyZXM6IHN0cmluZykgPT4gY29uc29sZS5sb2cocmVzKSlcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gKlxuICogYGBgXG4gKlxuICogQGludGVyZmFjZXNcbiAqIERvY3VtZW50U2Nhbm5lck9wdGlvbnNcbiAqIEBlbnVtc1xuICogRG9jdW1lbnRTY2FubmVyU291cmNlVHlwZVxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0RvY3VtZW50U2Nhbm5lcicsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWRvY3VtZW50LXNjYW5uZXInLFxuICBwbHVnaW5SZWY6ICdzY2FuJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9OZXV0cmlub3NQbGF0Zm9ybS9jb3Jkb3ZhLXBsdWdpbi1kb2N1bWVudC1zY2FubmVyJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERvY3VtZW50U2Nhbm5lciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIFNjYW4gYSBkb2N1bWVudFxuICAgKiBAcGFyYW0gb3B0cyB7RG9jdW1lbnRTY2FubmVyT3B0aW9uc30gb3B0aW9uYWwgcGFyYW1ldGVyIGZvciBjb250cm9sbGluZyBzY2FubmluZ1xuICAgKiBAcmV0dXJuIHtQcm9taXNlPHN0cmluZz59IGZpbGUgVVJMIG9mIHNjYW5uZWQgZG9jdW1lbnQgaW1hZ2VcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja09yZGVyOiAncmV2ZXJzZScsXG4gIH0pXG4gIHNjYW5Eb2Mob3B0cz86IERvY3VtZW50U2Nhbm5lck9wdGlvbnMpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19