import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var PowerManagement = /** @class */ (function (_super) {
    __extends(PowerManagement, _super);
    function PowerManagement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PowerManagement.prototype.acquire = function () { return cordova(this, "acquire", {}, arguments); };
    PowerManagement.prototype.dim = function () { return cordova(this, "dim", {}, arguments); };
    PowerManagement.prototype.release = function () { return cordova(this, "release", {}, arguments); };
    PowerManagement.prototype.setReleaseOnPause = function (set) { return cordova(this, "setReleaseOnPause", {}, arguments); };
    PowerManagement.pluginName = "PowerManagement";
    PowerManagement.plugin = "cordova-plugin-powermanagement-orig";
    PowerManagement.pluginRef = "powerManagement";
    PowerManagement.repo = "https://github.com/Viras-/cordova-plugin-powermanagement";
    PowerManagement.platforms = ["Android", "iOS", "Windows", "Windows Phone"];
    PowerManagement.decorators = [
        { type: Injectable }
    ];
    return PowerManagement;
}(IonicNativePlugin));
export { PowerManagement };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3Bvd2VyLW1hbmFnZW1lbnQvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sOEJBQXNDLE1BQU0sb0JBQW9CLENBQUM7O0lBNkJuQyxtQ0FBaUI7Ozs7SUFNcEQsaUNBQU87SUFTUCw2QkFBRztJQVNILGlDQUFPO0lBV1AsMkNBQWlCLGFBQUMsR0FBWTs7Ozs7OztnQkFwQy9CLFVBQVU7OzBCQTdCWDtFQThCcUMsaUJBQWlCO1NBQXpDLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcbi8qKlxuICogQG5hbWUgUG93ZXIgTWFuYWdlbWVudFxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgUG93ZXJNYW5hZ2VtZW50IHBsdWdpbiBvZmZlcnMgYWNjZXNzIHRvIHRoZSBkZXZpY2VzIHBvd2VyLW1hbmFnZW1lbnQgZnVuY3Rpb25hbGl0eS5cbiAqIEl0IHNob3VsZCBiZSB1c2VkIGZvciBhcHBsaWNhdGlvbnMgd2hpY2gga2VlcCBydW5uaW5nIGZvciBhIGxvbmcgdGltZSB3aXRob3V0IGFueSB1c2VyIGludGVyYWN0aW9uLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgUG93ZXJNYW5hZ2VtZW50IH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9wb3dlci1tYW5hZ2VtZW50L25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBwb3dlck1hbmFnZW1lbnQ6IFBvd2VyTWFuYWdlbWVudCkgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5wb3dlck1hbmFnZW1lbnQuYWNxdWlyZSgpXG4gKiAgIC50aGVuKG9uU3VjY2VzcylcbiAqICAgLmNhdGNoKG9uRXJyb3IpO1xuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1Bvd2VyTWFuYWdlbWVudCcsXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLXBvd2VybWFuYWdlbWVudC1vcmlnJyxcbiAgcGx1Z2luUmVmOiAncG93ZXJNYW5hZ2VtZW50JyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9WaXJhcy0vY29yZG92YS1wbHVnaW4tcG93ZXJtYW5hZ2VtZW50JyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MnLCAnV2luZG93cyBQaG9uZSddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQb3dlck1hbmFnZW1lbnQgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBBY3F1aXJlIGEgd2FrZWxvY2sgYnkgY2FsbGluZyB0aGlzLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBhY3F1aXJlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoaXMgYWNxdWlyZXMgYSBwYXJ0aWFsIHdha2Vsb2NrLCBhbGxvd2luZyB0aGUgc2NyZWVuIHRvIGJlIGRpbW1lZC5cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZGltKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlbGVhc2UgdGhlIHdha2Vsb2NrLiBJdCdzIGltcG9ydGFudCB0byBkbyB0aGlzIHdoZW4geW91J3JlIGZpbmlzaGVkIHdpdGggdGhlIHdha2Vsb2NrLCB0byBhdm9pZCB1bm5lY2Vzc2FyeSBiYXR0ZXJ5IGRyYWluLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICByZWxlYXNlKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEJ5IGRlZmF1bHQsIHRoZSBwbHVnaW4gd2lsbCBhdXRvbWF0aWNhbGx5IHJlbGVhc2UgYSB3YWtlbG9jayB3aGVuIHlvdXIgYXBwIGlzIHBhdXNlZCAoZS5nLiB3aGVuIHRoZSBzY3JlZW4gaXMgdHVybmVkIG9mZiwgb3IgdGhlIHVzZXIgc3dpdGNoZXMgdG8gYW5vdGhlciBhcHApLlxuICAgKiBJdCB3aWxsIHJlYWNxdWlyZSB0aGUgd2FrZWxvY2sgdXBvbiBhcHAgcmVzdW1lLiBJZiB5b3Ugd291bGQgcHJlZmVyIHRvIGRpc2FibGUgdGhpcyBiZWhhdmlvdXIsIHlvdSBjYW4gdXNlIHRoaXMgZnVuY3Rpb24uXG4gICAqIEBwYXJhbSBzZXQge2Jvb2xlYW59XG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHNldFJlbGVhc2VPblBhdXNlKHNldDogYm9vbGVhbik6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=