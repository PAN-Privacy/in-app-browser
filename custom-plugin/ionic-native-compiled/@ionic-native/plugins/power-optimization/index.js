var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var PowerOptimizationOriginal = /** @class */ (function (_super) {
    __extends(PowerOptimizationOriginal, _super);
    function PowerOptimizationOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PowerOptimizationOriginal.prototype.IsIgnoringBatteryOptimizations = function () { return cordova(this, "IsIgnoringBatteryOptimizations", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.RequestOptimizations = function () { return cordova(this, "RequestOptimizations", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.RequestOptimizationsMenu = function () { return cordova(this, "RequestOptimizationsMenu", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.IsIgnoringDataSaver = function () { return cordova(this, "IsIgnoringDataSaver", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.RequestDataSaverMenu = function () { return cordova(this, "RequestDataSaverMenu", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.HaveProtectedAppsCheck = function () { return cordova(this, "HaveProtectedAppsCheck", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.ProtectedAppCheck = function () { return cordova(this, "ProtectedAppCheck", { "sync": true }, arguments); };
    PowerOptimizationOriginal.pluginName = "PowerOptimization";
    PowerOptimizationOriginal.plugin = "cordova-plugin-power-optimization";
    PowerOptimizationOriginal.pluginRef = "cordova.plugins.PowerOptimization";
    PowerOptimizationOriginal.repo = "https://github.com/snt1017/cordova-plugin-power-optimization";
    PowerOptimizationOriginal.platforms = ["Android"];
    return PowerOptimizationOriginal;
}(IonicNativePlugin));
var PowerOptimization = new PowerOptimizationOriginal();
export { PowerOptimization };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3Bvd2VyLW9wdGltaXphdGlvbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ0EsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUE2QmpDLHFDQUFpQjs7OztJQU90RCwwREFBOEI7SUFTOUIsZ0RBQW9CO0lBU3BCLG9EQUF3QjtJQVN4QiwrQ0FBbUI7SUFTbkIsZ0RBQW9CO0lBU3BCLGtEQUFzQjtJQVN0Qiw2Q0FBaUI7Ozs7Ozs0QkEzRm5CO0VBOEJ1QyxpQkFBaUI7U0FBM0MsaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZG92YSwgSW9uaWNOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY29yZSc7XG4vKipcbiAqIEBuYW1lIFBvd2VyIE9wdGltaXphdGlvblxuICogQGRlc2NyaXB0aW9uXG4gKiBBbmRyb2lkIEN1c3RvbSBSb21zIG1hZGUgc29tZXRpbWVzIHlvdXIgYXBwcyB1bmZ1bmN0aW9uYWwgZHVlIHRvIGJlaW5nIGtpbGxlZCBpbiB0aGUgYmFja2dyb3VuZCwgbm90aWZpY2F0aW9uIG1lc3NhZ2VzIGRvIG5vdCBhcHBlYXJpbmcgb3IgeW91ciBzZXJ2aWNlcyBiZWluZyBraWxsZWQgYnkgYWdyZXNzaXZlIHBvd2VyIHNhdmluZyBtb2RlLlxuICogVGhlIFBvd2VyIE9wdGltaXphdGlvbiBwbHVnaW4gZ2l2ZSB5b3UgYW5kcm9pZCBQb3dlck1hbmFnZXIgbWV0aG9kcyB3aXRoIGNvcmRvdmEuXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBQb3dlck9wdGltaXphdGlvbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvcG93ZXItb3B0aW1pemF0aW9uL25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBwb3dlck9wdGltaXphdGlvbjogUG93ZXJPcHRpbWl6YXRpb24pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqIHRoaXMucG93ZXJPcHRpbWl6YXRpb24uSXNJZ25vcmluZ0JhdHRlcnlPcHRpbWl6YXRpb25zKClcbiAqICAgLnRoZW4ob25TdWNjZXNzKVxuICogICAuY2F0Y2gob25FcnJvcik7XG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnUG93ZXJPcHRpbWl6YXRpb24nLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb24nLFxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuUG93ZXJPcHRpbWl6YXRpb24nLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3NudDEwMTcvY29yZG92YS1wbHVnaW4tcG93ZXItb3B0aW1pemF0aW9uJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUG93ZXJPcHRpbWl6YXRpb24gZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBDaGVjayBpZiB0aGUgYmF0dGVyeSBvcHRpbWl6YXRpb24gaXMgaWdub3JpbmdcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXG4gIElzSWdub3JpbmdCYXR0ZXJ5T3B0aW1pemF0aW9ucygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuICAvKipcbiAgICogUmVxdWVzdCBwZXJtaXNzb24gdG8gaWdub3JlIG9wdGltaXphdGlvbnM6XG4gICAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBjaGVjayBodHRwczovL2dpdGh1Yi5jb20vc250MTAxNy9jb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBSZXF1ZXN0T3B0aW1pemF0aW9ucygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuICAvKipcbiAgICogR28gdG8gYmF0dGVyeSBvcHRpbWl6YXRpb25zIGNvbmZpZ3VyYXRpb25zIG1lbnU6XG4gICAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBjaGVjayBodHRwczovL2dpdGh1Yi5jb20vc250MTAxNy9jb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBSZXF1ZXN0T3B0aW1pemF0aW9uc01lbnUoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbiAgLyoqXG4gICAqIENoZWNrIGlmIGhhdmUgYW55IGRhdGEgcmVzdHJpY3Rpb25zIGluIGJhY2tncm91bmQ6XG4gICAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBjaGVjayBodHRwczovL2dpdGh1Yi5jb20vc250MTAxNy9jb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBJc0lnbm9yaW5nRGF0YVNhdmVyKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG4gIC8qKlxuICAgKiBHbyB0byBkYXRhIHJlc3RyaWN0aW9ucyBpbiBiYWNrZ3JvdW5kIGNvbmZpZ3VyYXRpb25zIG1lbnU6XG4gICAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBjaGVjayBodHRwczovL2dpdGh1Yi5jb20vc250MTAxNy9jb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBSZXF1ZXN0RGF0YVNhdmVyTWVudSgpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuICAvKipcbiAgICogQ2hlY2sgaWYgaGF2ZSBhbm90aGVyIGJhdHRlcnkgcmVzdHJpY3Rpb24gaXMgcHJlc2VudCBpbnRvIHBob25lIChsaWtlIGh1YXdlaSwgeGlhb21pLCBldGMpOlxuICAgKiBGb3IgbW9yZSBpbmZvLCBwbGVhc2UgY2hlY2sgaHR0cHM6Ly9naXRodWIuY29tL3NudDEwMTcvY29yZG92YS1wbHVnaW4tcG93ZXItb3B0aW1pemF0aW9uXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgSGF2ZVByb3RlY3RlZEFwcHNDaGVjaygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxuICAvKipcbiAgICogR28gdG8gY29uZmlndXJhdGlvbnMgbWVudSBpZiBhbm90aGVyIGJhdHRlcnkgcmVzdHJpY3Rpb24gaXMgcHJlc2VudCBpbnRvIHBob25lIChsaWtlIGh1YXdlaSwgeGlhb21pLCBldGMpLiBZb3UgY2FuIHNlbmQgdHJ1ZSBpbnRvIHBhcmFtcyBpZiB5b3Ugd2FudCB0byBmb3JjZSBzaG93IHRoZSBtZW51IChpcyBvbmx5IHNob3cgdGhlIGZpc3QgdGltZSB3aXRob3V0IHBhcmFtcyk6XG4gICAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBjaGVjayBodHRwczovL2dpdGh1Yi5jb20vc250MTAxNy9jb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb25cbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxuICBQcm90ZWN0ZWRBcHBDaGVjaygpOiBQcm9taXNlPGFueT4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19