import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var VideoCapturePlus = /** @class */ (function (_super) {
    __extends(VideoCapturePlus, _super);
    function VideoCapturePlus() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VideoCapturePlus.prototype.captureVideo = function (options) { return cordova(this, "captureVideo", { "callbackOrder": "reverse" }, arguments); };
    VideoCapturePlus.pluginName = "VideoCapturePlus";
    VideoCapturePlus.plugin = "cordova-plugin-video-capture-plus";
    VideoCapturePlus.pluginRef = "window.plugins.videocaptureplus";
    VideoCapturePlus.repo = "https://github.com/danielsogl/cordova-plugin-video-capture-plus";
    VideoCapturePlus.platforms = ["Android", "iOS"];
    VideoCapturePlus.decorators = [
        { type: Injectable }
    ];
    return VideoCapturePlus;
}(IonicNativePlugin));
export { VideoCapturePlus };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL3ZpZGVvLWNhcHR1cmUtcGx1cy9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyw4QkFBc0MsTUFBTSxvQkFBb0IsQ0FBQzs7SUF3SWxDLG9DQUFpQjs7OztJQVNyRCx1Q0FBWSxhQUFDLE9BQWlDOzs7Ozs7O2dCQVYvQyxVQUFVOzsyQkF4SVg7RUF5SXNDLGlCQUFpQjtTQUExQyxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3Jkb3ZhLCBJb25pY05hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9jb3JlJztcblxuZXhwb3J0IGludGVyZmFjZSBNZWRpYUZpbGUge1xuICAvKipcbiAgICogVGhlIG5hbWUgb2YgdGhlIGZpbGUsIHdpdGhvdXQgcGF0aCBpbmZvcm1hdGlvbi5cbiAgICovXG4gIG5hbWU6IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBmdWxsIHBhdGggb2YgdGhlIGZpbGUsIGluY2x1ZGluZyB0aGUgbmFtZS5cbiAgICovXG4gIGZ1bGxQYXRoOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUaGUgZmlsZSdzIG1pbWUgdHlwZVxuICAgKi9cbiAgdHlwZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgZGF0ZSBhbmQgdGltZSB3aGVuIHRoZSBmaWxlIHdhcyBsYXN0IG1vZGlmaWVkLlxuICAgKi9cbiAgbGFzdE1vZGlmaWVkRGF0ZTogRGF0ZTtcblxuICAvKipcbiAgICogVGhlIHNpemUgb2YgdGhlIGZpbGUsIGluIGJ5dGVzLlxuICAgKi9cbiAgc2l6ZTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBSZXRyaWV2ZXMgdGhlIGZvcm1hdCBpbmZvcm1hdGlvbiBvZiB0aGUgbWVkaWEgZmlsZS5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gc3VjY2Vzc0NhbGxiYWNrXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtlcnJvckNhbGxiYWNrXVxuICAgKi9cbiAgZ2V0Rm9ybWF0RGF0YShzdWNjZXNzQ2FsbGJhY2s6IChkYXRhOiBNZWRpYUZpbGVEYXRhKSA9PiBhbnksIGVycm9yQ2FsbGJhY2s/OiAoZXJyOiBhbnkpID0+IGFueSk6IGFueTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNZWRpYUZpbGVEYXRhIHtcbiAgLyoqXG4gICAqIFRoZSBhY3R1YWwgZm9ybWF0IG9mIHRoZSBhdWRpbyBhbmQgdmlkZW8gY29udGVudC5cbiAgICovXG4gIGNvZGVjczogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGF2ZXJhZ2UgYml0cmF0ZSBvZiB0aGUgY29udGVudC4gVGhlIHZhbHVlIGlzIHplcm8gZm9yIGltYWdlcy5cbiAgICovXG4gIGJpdHJhdGU6IG51bWJlcjtcbiAgLyoqXG4gICAqIFRoZSBoZWlnaHQgb2YgdGhlIGltYWdlIG9yIHZpZGVvIGluIHBpeGVscy4gVGhlIHZhbHVlIGlzIHplcm8gZm9yIGF1ZGlvIGNsaXBzLlxuICAgKi9cbiAgaGVpZ2h0OiBudW1iZXI7XG4gIC8qKlxuICAgKiBUaGUgd2lkdGggb2YgdGhlIGltYWdlIG9yIHZpZGVvIGluIHBpeGVscy4gVGhlIHZhbHVlIGlzIHplcm8gZm9yIGF1ZGlvIGNsaXBzLlxuICAgKi9cbiAgd2lkdGg6IG51bWJlcjtcbiAgLyoqXG4gICAqIFRoZSBsZW5ndGggb2YgdGhlIHZpZGVvIG9yIHNvdW5kIGNsaXAgaW4gc2Vjb25kcy4gVGhlIHZhbHVlIGlzIHplcm8gZm9yIGltYWdlcy5cbiAgICovXG4gIGR1cmF0aW9uOiBudW1iZXI7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVmlkZW9DYXB0dXJlUGx1c09wdGlvbnMge1xuICAvKipcbiAgICogVGhlIG51bWJlciBvZiB2aWRlb3MgdG8gcmVjb3JkLCBkZWZhdWx0IDEgKG9uIGlPUyBhbHdheXMgMSlcbiAgICovXG4gIGxpbWl0PzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBNYXggZHVyYXRpb24gaW4gc2Vjb25kcywgZGVmYXVsdCAwLCB3aGljaCBpcyAnZm9yZXZlcidcbiAgICovXG4gIGR1cmF0aW9uPzogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBTZXQgdG8gdHJ1ZSB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBsb3cgcXVhbGl0eSBzZXR0aW5nXG4gICAqL1xuICBoaWdocXVhbGl0eT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFNldCB0byB0cnVlIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGJhY2tmYWNpbmcgY2FtZXJhIHNldHRpbmcuXG4gICAqIFlvdSdsbCB3YW50IHRvIHNuaWZmIHRoZSB1c2VyYWdlbnQvZGV2aWNlIGFuZCBwYXNzIHRoZSBiZXN0IG92ZXJsYXkgYmFzZWQgb24gdGhhdC4uIGFzc3VtaW5nIGlwaG9uZSBoZXJlXG4gICAqL1xuICBmcm9udGNhbWVyYT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIHB1dCB0aGUgcG5nIG92ZXJsYXkgaW4geW91ciBhc3NldHMgZm9sZGVyXG4gICAqL1xuICBwb3J0cmFpdE92ZXJsYXk/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqICBub3QgcGFzc2luZyBhbiBvdmVybGF5IG1lYW5zIG5vIGltYWdlIGlzIHNob3duIGZvciB0aGUgbGFuZHNjYXBlIG9yaWVudGF0aW9uXG4gICAqL1xuICBsYW5kc2NhcGVPdmVybGF5Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBpT1Mgb25seVxuICAgKi9cbiAgb3ZlcmxheVRleHQ/OiBzdHJpbmc7XG59XG5cbi8qKlxuICogQGJldGFcbiAqIEBuYW1lIFZpZGVvIENhcHR1cmUgUGx1c1xuICogQGRlc2NyaXB0aW9uXG4gKiBUaGlzIHBsdWdpbiBvZmZlcnMgc29tZSB1c2VmdWwgZXh0cmFzIG9uIHRvcCBvZiB0aGUgZGVmYXVsdCBNZWRpYSBDYXB0dXJlIFBsdWdpbiBjYXBhYmlsaXRpZXM6XG4gKiAtIEhEIHJlY29yZGluZy5cbiAqIC0gU3RhcnRpbmcgd2l0aCB0aGUgZnJvbnQgY2FtZXJhLlxuICogLSBBIGN1c3RvbSBvdmVybGF5IChjdXJyZW50bHkgaU9TIG9ubHkpLlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgVmlkZW9DYXB0dXJlUGx1cywgVmlkZW9DYXB0dXJlUGx1c09wdGlvbnMsIE1lZGlhRmlsZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvdmlkZW8tY2FwdHVyZS1wbHVzL25neCc7XG4gKlxuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgdmlkZW9DYXB0dXJlUGx1czogVmlkZW9DYXB0dXJlUGx1cykgeyB9XG4gKlxuICogLi4uXG4gKlxuICogY29uc3Qgb3B0aW9uczogVmlkZW9DYXB0dXJlUGx1c09wdGlvbnMgPSB7XG4gKiAgICBsaW1pdDogMSxcbiAqICAgIGhpZ2hxdWFsaXR5OiB0cnVlLFxuICogICAgcG9ydHJhaXRPdmVybGF5OiAnYXNzZXRzL2ltZy9jYW1lcmEvb3ZlcmxheS9wb3J0cmFpdC5wbmcnLFxuICogICAgbGFuZHNjYXBlT3ZlcmxheTogJ2Fzc2V0cy9pbWcvY2FtZXJhL292ZXJsYXkvbGFuZHNjYXBlLnBuZydcbiAqIH1cbiAqXG4gKiB0aGlzLnZpZGVvQ2FwdHVyZVBsdXMuY2FwdHVyZVZpZGVvKG9wdGlvbnMpLnRoZW4obWVkaWFmaWxlOiBNZWRpYUZpbGVbXSA9PiBjb25zb2xlLmxvZyhtZWRpYWZpbGUpLCBlcnJvciA9PiBjb25zb2xlLmxvZygnU29tZXRoaW5nIHdlbnQgd3JvbmcnKSk7XG4gKlxuICogYGBgXG4gKiBAaW50ZXJmYWNlc1xuICogTWVkaWFGaWxlXG4gKiBNZWRpYUZpbGVEYXRhXG4gKiBWaWRlb0NhcHR1cmVQbHVzT3B0aW9uc1xuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ1ZpZGVvQ2FwdHVyZVBsdXMnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi12aWRlby1jYXB0dXJlLXBsdXMnLFxuICBwbHVnaW5SZWY6ICd3aW5kb3cucGx1Z2lucy52aWRlb2NhcHR1cmVwbHVzJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9kYW5pZWxzb2dsL2NvcmRvdmEtcGx1Z2luLXZpZGVvLWNhcHR1cmUtcGx1cycsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBWaWRlb0NhcHR1cmVQbHVzIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogU3RhcnRzIHJlY29yZGluZ3NcbiAgICogQHBhcmFtIFtvcHRpb25zXSB7VmlkZW9DYXB0dXJlUGx1c09wdGlvbnN9IENvbmZpZ3VyZSBvcHRpb25zXG4gICAqIEByZXR1cm4ge1Byb21pc2U8TWVkaWFGaWxlW10+fVxuICAgKi9cbiAgQENvcmRvdmEoe1xuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJyxcbiAgfSlcbiAgY2FwdHVyZVZpZGVvKG9wdGlvbnM/OiBWaWRlb0NhcHR1cmVQbHVzT3B0aW9ucyk6IFByb21pc2U8TWVkaWFGaWxlW10+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==